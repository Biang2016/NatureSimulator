//%GenSrc:1:P+D8lcFaO0uyxGpa3x2lyA
//%CodeKey:5o7YeLpPXkuahnji/HlKQw
/*
 * This code was generated by InstinctAI
 *
 *         DO NOT MODIFY BY HAND
 *     THIS FILE WILL BE REGENERATED
 *
 *      DO NOT REMOVE/EDIT COMMENTS
 *
 * If you do need to modify this file, note that it is a partial class.
 * See https://msdn.microsoft.com/en-us/library/wa80x488.aspx
 * You can edit the file Creature.cs
 */

namespace instinctai.usr.behaviours
{
    using System.Collections;
    using UnityEngine;
    using com.kupio.instinctai;
#if UNITY_EDITOR
    using UnityEditor;
    using com.kupio.instinctai.live;
#endif

    public partial class Creature : MonoBehaviour
#if UNITY_EDITOR
        , LiveTree
#endif
    {
        private IEnumerator _state = null;
        private int _jmp;
        private bool valid = true;

#if UNITY_EDITOR
    private LiveUpdate _live;
    private int _liveHandle;
#endif

        public void UpdateAI()
        {
            if (valid) {
                if (_state == null || _state.MoveNext() == false) {
                    _state = StateGen();
                    _state.MoveNext();
                }
            }
        }
        private IEnumerator StateGen()
        {
            int node = 0;
            NodeVal ret = NodeVal.Error;
            _jmp = -1;
            int n0c = -1;
            int n2c = -1;
            int n3c = -1;
            int n4c = -1;
            int n5c = -1;
            int n6c = -1;
            NodeVal n0_1r = NodeVal.Invalid;
            NodeVal n3_1r = NodeVal.Invalid;
            NodeVal n4_1r = NodeVal.Invalid;
            NodeVal n5_1r = NodeVal.Invalid;
            NodeVal n6_1r = NodeVal.Invalid;

            if (!valid) {
                throw new BehaviourTreeException("Behaviour tree will not run. The GameObject has missing required components.");
            }
            do {
                switch (node) {
                    case 0:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(15, _liveHandle, NodeVal.Running, false, true);
                        #endif
                        n0c = 1;
                        node = 1;
                        n0_1r = NodeVal.Success;
                        break;
                    case 15:

                        if (_jmp >= 0) {
                            node = _jmp;
                            _jmp = -1;
                            continue;
                        }
                        n0_1r = (NodeVal)System.Math.Max((int)n0_1r, (int)ret);
                        if (ret == NodeVal.Success && n0c < 2) {
                            node = ++n0c;
                        } else {
                            n0c = 1;
                            node = 0;
                            ret = n0_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(15, _liveHandle, ret, true, false);
                        #endif
                            yield return null;
                        }
                        break;
                    case 1:


                        ret = (this.GrowUp());
                        node = 15;

                        ret = NodeVal.Success;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(10, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 2:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(9, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n2c = 3;
                        node = 3;
                        break;
                    case 17:

                        if(ret != NodeVal.Success) {
                            if (++n2c > 6) {
                                n2c = 3;
                                node = 15;
                            } else {
                                node = n2c;
                            }
                        } else {
                            n2c = 3;
                            node = 15;
                        }

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(9, _liveHandle, ret, false, false);
                        #endif
                        break;
                    case 3:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(8, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n3c = 7;
                        node = 7;
                        n3_1r = NodeVal.Success;
                        break;
                    case 18:

                        n3_1r = (NodeVal)System.Math.Max((int)n3_1r, (int)ret);
                        if (ret == NodeVal.Success && n3c < 8) {
                            node = ++n3c;
                        } else {
                            n3c = 7;
                            node = 17;
                            ret = n3_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(8, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 4:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(0, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n4c = 9;
                        node = 9;
                        n4_1r = NodeVal.Success;
                        break;
                    case 19:

                        n4_1r = (NodeVal)System.Math.Max((int)n4_1r, (int)ret);
                        if (ret == NodeVal.Success && n4c < 10) {
                            node = ++n4c;
                        } else {
                            n4c = 9;
                            node = 17;
                            ret = n4_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(0, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 5:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(3, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n5c = 11;
                        node = 11;
                        n5_1r = NodeVal.Success;
                        break;
                    case 20:

                        n5_1r = (NodeVal)System.Math.Max((int)n5_1r, (int)ret);
                        if (ret == NodeVal.Success && n5c < 12) {
                            node = ++n5c;
                        } else {
                            n5c = 11;
                            node = 17;
                            ret = n5_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(3, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 6:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(7, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n6c = 13;
                        node = 13;
                        n6_1r = NodeVal.Success;
                        break;
                    case 21:

                        n6_1r = (NodeVal)System.Math.Max((int)n6_1r, (int)ret);
                        if (ret == NodeVal.Success && n6c < 14) {
                            node = ++n6c;
                        } else {
                            n6c = 13;
                            node = 17;
                            ret = n6_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(7, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 7:


                        ret = (this.FindPredators());
                        node = 18;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(2, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 8:


                        ret = (this.MoveToEscape());
                        node = 18;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(11, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 9:


                        ret = (this.FindMate());
                        node = 19;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(1, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 10:


                        ret = (this.MoveToMate());
                        node = 19;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(12, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 11:


                        ret = (this.FindPreys());
                        node = 20;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(4, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 12:


                        ret = (this.MoveToPrey());
                        node = 20;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(13, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 13:


                        ret = (this.Wander());
                        node = 21;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(6, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 14:


                        ret = (this.MoveToWander());
                        node = 21;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(14, _liveHandle, ret, false, false);
                        #endif

                        break;
                }
            } while (node >= 0);
            yield return null;
        }
        public void ResetTree()
        {
            if (_jmp != 0)
            {
                _jmp = 0;
            }
        }
#if UNITY_EDITOR
        public bool SetLive(LiveUpdate live, string treeKey, string codeKey, int liveHandle, out bool codeMatch) {
            if (treeKey == "P+D8lcFaO0uyxGpa3x2lyA") {
                _live = live;
                codeMatch = (codeKey == "5o7YeLpPXkuahnji/HlKQw");
                if (codeMatch) {
                    _liveHandle = liveHandle;
                }
                return true;
            }
            codeMatch = false;
            return false;
        }
#endif

    }
}
